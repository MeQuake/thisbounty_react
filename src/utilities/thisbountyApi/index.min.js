const appId = '1936865129878142';
const idenitfyPoolId = 'us-east-1:8e8026e4-1d15-408d-8850-68db5dd7ad81';
AWS.config.region = 'us-east-1';

// Load the Facebook SDK asynchronously
(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) {
    return;
  }
  js = d.createElement(s);
  js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));


const login = () =>  {
  return new Promise(function(resolve, reject) {
    window.fbAsyncInit = function() {
      FB.init({
        appId: appId
      });

      FB.getLoginStatus(function(response) {
        if (response.status === 'connected') {
          console.log('Logged in.');
          //enable ADD BOUNTY button
        }
        else {
          console.log('User is not logged in.');
        }
      });

      FB.login(function(response) {
        if (response.authResponse) {
          AWS.config.credentials = new AWS.CognitoIdentityCredentials({
            IdentityPoolId: idenitfyPoolId,
            Logins: {
              'graph.facebook.com': response.authResponse.accessToken
            }
          });
          resolve();
        }
        else {
          reject("Something went wrong with the login.");
        }
      });
    };
  });
}


/**
 * Make a request to an AWS gateway endpoint
 *
 * @param {Object} config Request config values: invokeUrl, endpoint, body, method, params, additionalParams
*/
const awsRequest = (config) =>  {
  console.log('aws Request');
  return new Promise((resolve, reject) => {
    //refactor for optional creds
    if(config.secure) {
    AWS.config.credentials.get(() => {
      const apigClient = apigClientFactory.newClient({
        invokeUrl: config['invokeUrl'],
        accessKey: AWS.config.credentials.accessKeyId,
        secretKey: AWS.config.credentials.secretAccessKey,
        sessionToken: AWS.config.credentials.sessionToken,
      });
    } else {
       const apigClient = apigClientFactory.newClient({
        invokeUrl: config['invokeUrl'],
      });
    }


      apigClient.invokeApi(config['params'], config['endpoint'], config['method'], config['additionalParams'], config['body'])
      .then((response) => {
        resolve(response);
      }).catch((response) => {
        reject(response);
      });
    });
  });
}

export {login, awsRequest};
